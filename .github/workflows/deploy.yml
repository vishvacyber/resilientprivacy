name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  NPM_CACHE: '~/.npm'

jobs:
  # Pre-deployment checks
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint:ci

      - name: Format check
        run: npm run format:check

      - name: Build test
        run: npm run build:ci

  # Deploy to Vercel
  deploy:
    runs-on: ubuntu-latest
    needs: checks
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}
          working-directory: ./

      - name: Comment deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.preview-url }}';
            const isProduction = '${{ github.ref == 'refs/heads/main' }}' === 'true';
            
            const body = isProduction 
              ? `üöÄ **Production Deployment Successful!**
                 
                 **Production URL:** https://resilientprivacy.com
                 **Deployment URL:** ${deploymentUrl}
                 
                 Your changes are now live in production!`
              : `üîç **Preview Deployment Ready!**
                 
                 **Preview URL:** ${deploymentUrl}
                 **Production URL:** https://resilientprivacy.com
                 
                 Review your changes before merging to main.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  # Notify on failure
  notify-failure:
    runs-on: ubuntu-latest
    needs: [checks, deploy]
    if: failure()
    steps:
      - name: Notify failure
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ùå **Deployment Failed!**
                 
                 Please check the workflow logs and fix any issues before retrying.
                 
                 **Failed Jobs:** ${{ needs.checks.result || 'checks' }}, ${{ needs.deploy.result || 'deploy' }}`
            });
